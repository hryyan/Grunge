# -*- coding: utf-8 -*-from PyQt4.QtCore import *from PyQt4.QtGui import *from urllib import FancyURLopenerimport re, sysimport mechanizefrom bs4 import BeautifulSoupQTextCodec.setCodecForTr(QTextCodec.codecForName("utf8"))class MyTableView(QTableWidget):    def __init__(self, parent = None):        super(MyTableView, self).__init__(parent)                self.setWindowTitle("Youku Assist")        self.resize(740, 640)        self.setRowCount(30)        self.setColumnCount(2)        self.setHorizontalHeaderItem(0, QTableWidgetItem(self.tr("标题")))        self.setHorizontalHeaderItem(1, QTableWidgetItem(self.tr("链接")))                # New Version        b = Crawler("http://i.youku.com/u/UMzE5NzMzNzM2/videos/view_1_order_1", u"炉石")        url, title = b.ProcessPages(3)        # Old Version        # title, url = getInfo()        for x in range(len(title)):            self.setItem(x, 0, QTableWidgetItem(title[x]))            #self.textEdit = QLabel(url[x])            #self.textEdit.setOpenExternalLinks(True)            self.setItem(x, 1, QTableWidgetItem(url[x]))            #self.setCellWidget(x, 1, self.textEdit)        self.resizeColumnsToContents()        self.connect(self, SIGNAL("cellDoubleClicked(int, int)"), self.OpenUrl)            def OpenUrl(self, row, col):        if col == 1:            QDesktopServices.openUrl(QUrl(self.item(row, col).text()))            print self.item(row, col).text()# Old Versiondef getInfo():    opener = FancyURLopener()    urlstr = 'http://i.youku.com/u/UNDY0NTEyNzY=/videos'        html_data = str(opener.open(urlstr).read())    #print file;    re_1 = re.compile(r'_hz="l_v_title".+?href=".+?"')    data = re_1.findall(html_data)    re_2 = re.compile(r'"幻影心.+?"')    re_3 = re.compile(r'"http.+?"')        title = []    url = []    for x in data:        t = re_2.findall(str(x))[0].strip('''"''')        if t not in title:            title.append(t)        u = re_3.findall(str(x))[0].strip('''"''')        if u not in url:            url.append(u)    return (title, url)    # New Versionclass Crawler(object):    """Web Crawler"""    def __init__(self, url, pattern):        super(Crawler, self).__init__()        self.url = url        self.pattern = pattern        # Browser        self.br = mechanize.Browser()        # options        self.br.set_handle_equiv(True)        self.br.set_handle_redirect(True)        self.br.set_handle_referer(True)        self.br.set_handle_robots(False)        # User-Agent        self.br.addheaders = [('User-agent', 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1')]        self.doc = self.br.open(self.url)        self.soup = BeautifulSoup(self.doc)    def Process(self):        titles = self.soup.find_all(class_="v_title")        links = []        names = []        for title in titles:            if re.search(self.pattern, unicode(title)):                links.append(title.a['href'])                names.append(title.a['title'])        return (links, names)    def NextPage(self):        if self.soup.find(class_="next").a:            self.url = "i.youku.com" + str(self.soup.find(class_="next").a["href"])            self.doc = self.br.open(self.url)            self.soup = BeautifulSoup(self.doc)        else:            raise StopIteration    def ProcessPages(self, num):        links = []        names = []        links, names = self.Process()        if num <= 0:            num = 1        for x in xrange(1, num):            self.NextPage()            link, name = self.Process()            links.extend(link)            names.extend(name)        return (links, names)if __name__ == '__main__':    app = QApplication(sys.argv)    window = MyTableView()    window.show()    app.exec_()